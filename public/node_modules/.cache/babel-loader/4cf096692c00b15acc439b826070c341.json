{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\jonah-hogate-brainflix\\\\jonah-hogate-brainflix\\\\src\\\\App.js\";\nimport './App.css';\nimport './App.scss';\nimport './component/Nav/Nav';\nimport NavRender from '../src/component/Nav/Nav';\nimport { Component } from 'react';\nimport VideoRender from './component/Video/Video';\nimport videoDetailsData from '../src/assets/Data/video-details.json';\nimport videoData from '../src/assets/Data/videos.json';\nimport NextVideo from './component/NextVideo/NextVideo';\nimport Comments from './component/Comments/Comments';\nimport getVideo from './component/Utils/Axios';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"?api_key=c03185ad-ce89-4771-aa63-e418f96376b0\";\nconst apiUrl = \"https://project-2-api.herokuapp.com\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allVideos: [],\n      selectedVideo: videoDetailsData[0]\n    };\n\n    this.renderData = id => {\n      setTimeout(() => axios.all([axios.get(`${apiUrl}/videos${apiKey}`).then(response => {\n        this.setState({\n          videos: response.data\n        });\n      })], [axios.get(`${apiUrl}/videos/${id}${apiKey}`).then(response => {\n        this.setState({\n          mainVideo: response.data,\n          currentId: response.data.id,\n          isLoading: false,\n          firstLoad: false\n        });\n      })]), 2000);\n    };\n\n    this.handleSelectVideo = clickedId => {\n      const foundVideo = videoData.find(allVideos => clickedId === allVideos.id);\n      this.setState({\n        selectedVideo: foundVideo\n      });\n    };\n  }\n\n  // constructor() {\n  //   super();\n  //   this.state.allVideos = getVideo();\n  //   console.log(this.state.allVideos);\n  // }\n  componentDidMount() {\n    this.setState(this.state.NextVideo);\n  }\n\n  render() {\n    var _this$state$allVideos;\n\n    const filteredVideos = (_this$state$allVideos = this.state.allVideos) === null || _this$state$allVideos === void 0 ? void 0 : _this$state$allVideos.filter(allVideos => allVideos.id !== this.state.selectedVideo.id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavRender, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(VideoRender, {\n        selectedVideo: this.state.selectedVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        selectedVideo: this.state.selectedVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(NextVideo, {\n        allVideos: filteredVideos,\n        filteredVideos: this.handleSelectVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:/Users/Jonah/Desktop/jonah-hogate-brainflix/jonah-hogate-brainflix/src/App.js"],"names":["NavRender","Component","VideoRender","videoDetailsData","videoData","NextVideo","Comments","getVideo","axios","apiKey","apiUrl","App","state","allVideos","selectedVideo","renderData","id","setTimeout","all","get","then","response","setState","videos","data","mainVideo","currentId","isLoading","firstLoad","handleSelectVideo","clickedId","foundVideo","find","componentDidMount","render","filteredVideos","filter"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAO,YAAP;AACA,OAAO,qBAAP;AACA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,MAAM,GAAG,+CAAf;AACA,MAAMC,MAAM,GAAG,qCAAf;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BW,KAD0B,GAClB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,aAAa,EAAEX,gBAAgB,CAAC,CAAD;AAFzB,KADkB;;AAAA,SAM1BY,UAN0B,GAMbC,EAAE,IAAI;AACjBC,MAAAA,UAAU,CACR,MACET,KAAK,CAACU,GAAN,CACE,CACEV,KAAK,CAACW,GAAN,CAAW,GAAET,MAAO,UAASD,MAAO,EAApC,EAAuCW,IAAvC,CAA4CC,QAAQ,IAAI;AACtD,aAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,QAAQ,CAACG;AADL,SAAd;AAGD,OAJD,CADF,CADF,EASE,CACEhB,KAAK,CAACW,GAAN,CAAW,GAAET,MAAO,WAAUM,EAAG,GAAEP,MAAO,EAA1C,EAA6CW,IAA7C,CAAkDC,QAAQ,IAAI;AAC5D,aAAKC,QAAL,CAAc;AACZG,UAAAA,SAAS,EAAEJ,QAAQ,CAACG,IADR;AAEZE,UAAAA,SAAS,EAAEL,QAAQ,CAACG,IAAT,CAAcR,EAFb;AAGZW,UAAAA,SAAS,EAAE,KAHC;AAIZC,UAAAA,SAAS,EAAE;AAJC,SAAd;AAMD,OAPD,CADF,CATF,CAFM,EAsBR,IAtBQ,CAAV;AAwBD,KA/ByB;;AAAA,SA4C1BC,iBA5C0B,GA4CLC,SAAD,IAAe;AAEjC,YAAMC,UAAU,GAAG3B,SAAS,CAAC4B,IAAV,CAAgBnB,SAAD,IAAeiB,SAAS,KAAKjB,SAAS,CAACG,EAAtD,CAAnB;AAEA,WAAKM,QAAL,CAAc;AACZR,QAAAA,aAAa,EAAEiB;AADH,OAAd;AAGD,KAnDyB;AAAA;;AAiC1B;AACA;AACA;AACA;AACA;AAEAE,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,QAAL,CAAc,KAAKV,KAAL,CAAWP,SAAzB;AAED;;AAWD6B,EAAAA,MAAM,GAAG;AAAA;;AACP,UAAMC,cAAc,4BAAG,KAAKvB,KAAL,CAAWC,SAAd,0DAAG,sBAAsBuB,MAAtB,CAA8BvB,SAAD,IAAeA,SAAS,CAACG,EAAV,KAAiB,KAAKJ,KAAL,CAAWE,aAAX,CAAyBE,EAAtF,CAAvB;AAEA,wBACE;AAAA,8BACA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,WAAD;AAAa,QAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWE;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,QAAD;AAAU,QAAA,aAAa,EAAE,KAAKF,KAAL,CAAWE;AAApC;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEqB,cAAtB;AAAsC,QAAA,cAAc,EAAE,KAAKN;AAA3D;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAhEyB;;AAiE3B;AAED,eAAelB,GAAf","sourcesContent":["import './App.css';\r\nimport './App.scss';\r\nimport './component/Nav/Nav';\r\nimport NavRender from '../src/component/Nav/Nav'\r\nimport { Component } from 'react';\r\nimport VideoRender from './component/Video/Video';\r\nimport videoDetailsData from '../src/assets/Data/video-details.json';\r\nimport videoData from '../src/assets/Data/videos.json';\r\nimport NextVideo from './component/NextVideo/NextVideo';\r\nimport Comments from './component/Comments/Comments';\r\nimport getVideo from './component/Utils/Axios';\r\nimport axios from 'axios'\r\nconst apiKey = \"?api_key=c03185ad-ce89-4771-aa63-e418f96376b0\";\r\nconst apiUrl = \"https://project-2-api.herokuapp.com\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    allVideos: [],\r\n    selectedVideo: videoDetailsData[0]\r\n  }\r\n\r\n  renderData = id => {\r\n    setTimeout(\r\n      () =>\r\n        axios.all(\r\n          [\r\n            axios.get(`${apiUrl}/videos${apiKey}`).then(response => {\r\n              this.setState({\r\n                videos: response.data\r\n              });\r\n            })\r\n          ],\r\n\r\n          [\r\n            axios.get(`${apiUrl}/videos/${id}${apiKey}`).then(response => {\r\n              this.setState({\r\n                mainVideo: response.data,\r\n                currentId: response.data.id,\r\n                isLoading: false,\r\n                firstLoad: false\r\n              });\r\n            })\r\n          ]\r\n        ),\r\n      2000\r\n    );\r\n  };\r\n\r\n  // constructor() {\r\n  //   super();\r\n  //   this.state.allVideos = getVideo();\r\n  //   console.log(this.state.allVideos);\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.setState(this.state.NextVideo);\r\n\r\n  }\r\n\r\n  handleSelectVideo = (clickedId) => {\r\n\r\n    const foundVideo = videoData.find((allVideos) => clickedId === allVideos.id);\r\n    \r\n    this.setState({\r\n      selectedVideo: foundVideo,\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const filteredVideos = this.state.allVideos?.filter((allVideos) => allVideos.id !== this.state.selectedVideo.id);\r\n\r\n    return (\r\n      <div>\r\n      <NavRender/>\r\n      <VideoRender selectedVideo={this.state.selectedVideo}/>\r\n      <Comments selectedVideo={this.state.selectedVideo}/>\r\n      <NextVideo allVideos={filteredVideos} filteredVideos={this.handleSelectVideo}/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}