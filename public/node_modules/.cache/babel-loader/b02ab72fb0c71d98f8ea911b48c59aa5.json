{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\jonah-hogate-brainflix\\\\jonah-hogate-brainflix\\\\src\\\\App.js\";\nimport './App.css'; // import { Component } from 'react'\n\nimport './component/Nav/Nav';\nimport NavRender from '../src/component/Nav/Nav';\nimport { Component } from 'react';\nimport VideoRender from './component/Video/Video';\nimport videoDetailsData from '../src/assets/Data/video-details.json';\nimport videoData from '../src/assets/Data/videos.json';\nimport NextVideo from './component/NextVideo/NextVideo'; // import RenderedVideo from './component/RenderedVideo/RenderedVideo';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      video: videoData,\n      selectedVideo: videoDetailsData[0]\n    };\n\n    this.handleSelectVideo = clickedId => {\n      const foundVideo = videoData.find(video => clickedId === video.id);\n      this.setState({\n        selectedVideo: foundVideo\n      });\n    };\n  }\n\n  render() {\n    const filteredVideos = this.state.video.filter(video => video.id !== this.state.selectedVideo.id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavRender, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(VideoRender, {\n        selectedVideo: this.state.selectedVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(NextVideo, {\n        video: this.state.video\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:/Users/Jonah/Desktop/jonah-hogate-brainflix/jonah-hogate-brainflix/src/App.js"],"names":["NavRender","Component","VideoRender","videoDetailsData","videoData","NextVideo","App","state","video","selectedVideo","handleSelectVideo","clickedId","foundVideo","find","id","setState","render","filteredVideos","filter"],"mappings":";AAAA,OAAO,WAAP,C,CACA;;AACA,OAAO,qBAAP;AACA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,iCAAtB,C,CACA;;;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAEJ,SADD;AAENK,MAAAA,aAAa,EAAEN,gBAAgB,CAAC,CAAD;AAFzB,KADkB;;AAAA,SAM1BO,iBAN0B,GAMLC,SAAD,IAAe;AAEjC,YAAMC,UAAU,GAAGR,SAAS,CAACS,IAAV,CAAgBL,KAAD,IAAWG,SAAS,KAAKH,KAAK,CAACM,EAA9C,CAAnB;AAEA,WAAKC,QAAL,CAAc;AACZN,QAAAA,aAAa,EAAEG;AADH,OAAd;AAGD,KAbyB;AAAA;;AAe1BI,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAG,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,CAAyBV,KAAD,IAAWA,KAAK,CAACM,EAAN,KAAa,KAAKP,KAAL,CAAWE,aAAX,CAAyBK,EAAzE,CAAvB;AAEA,wBACE;AAAA,8BACA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,WAAD;AAAa,QAAA,aAAa,EAAE,KAAKP,KAAL,CAAWE;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAzByB;;AA0B3B;AAED,eAAeF,GAAf","sourcesContent":["import './App.css';\n// import { Component } from 'react'\nimport './component/Nav/Nav';\nimport NavRender from '../src/component/Nav/Nav'\nimport { Component } from 'react';\nimport VideoRender from './component/Video/Video';\nimport videoDetailsData from '../src/assets/Data/video-details.json';\nimport videoData from '../src/assets/Data/videos.json';\nimport NextVideo from './component/NextVideo/NextVideo';\n// import RenderedVideo from './component/RenderedVideo/RenderedVideo';\n\n\nclass App extends Component {\n  state = {\n    video: videoData,\n    selectedVideo: videoDetailsData[0]\n  }\n\n  handleSelectVideo = (clickedId) => {\n\n    const foundVideo = videoData.find((video) => clickedId === video.id);\n    \n    this.setState({\n      selectedVideo: foundVideo,\n    })\n  }\n  \n  render() {\n    const filteredVideos = this.state.video.filter((video) => video.id !== this.state.selectedVideo.id);\n\n    return (\n      <div>\n      <NavRender/>\n      <VideoRender selectedVideo={this.state.selectedVideo}/>\n      <NextVideo video={this.state.video}/>\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}